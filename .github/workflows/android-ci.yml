name: Production Builds
on:
  workflow_dispatch:
    inputs:
      name:
        description: "Release-Build"
        default: "Generate release build"
      testers:
        type: choice
        description: "Select testers"
        options:
          - android
          - internalTesters
          - everyone

permissions:
  contents: write  # Necesario para crear un release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checking out branch
        uses: actions/checkout@v3

      # Step 2: Set up Java (Temurin distribution, Java 17)
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      # Step 3: Set up the Android SDK, which is needed to build Android apps
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10

      # Step 4: Decode the keystore that is stored as base64 in GitHub secrets
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > testapp/keystore.jks

      # Step 5: Give executable permissions to the Gradle wrapper
      - name: Give Gradle wrapper execution permissions
        run: chmod +x testapp/gradlew

      # Step 6: Build the release APK using Gradle
      - name: Build Release apk
        run: cd testapp && ./gradlew assembleRelease --stacktrace

      # Step 7: Build the release bundle (AAB file)
      - name: Build Release bundle
        run: cd testapp && ./gradlew bundleRelease --stacktrace

      # Step 8: Create a new tag for the release
      - name: Create GitHub Tag
        id: create_tag
        run: |
          TAG_NAME="v1.0.${{ github.run_number }}"
          git config user.name "GitHub Actions"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $TAG_NAME
          git push origin $TAG_NAME  # Push the tag to the repository

      # Step 9: Upload the APK and AAB files as release artifacts
      - name: Upload APK and AAB to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            testapp/app/build/outputs/apk/release/app-release-unsigned.apk
            testapp/app/build/outputs/bundle/release/app-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure you are using the correct token
