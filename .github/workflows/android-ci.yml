name: Android CI - Run Specific Test and Upload APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Install required dependencies
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip

    # Step 3: Install Android SDK
    - name: Install Android SDK
      run: |
        # Download SDK Tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O sdk-tools.zip
        unzip sdk-tools.zip -d $HOME/Android
        rm sdk-tools.zip
        echo "y" | $HOME/Android/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/Android --update

    # Step 4: Install Android SDK packages
    - name: Install SDK packages
      run: |
        yes | $HOME/Android/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/Android --licenses
        $HOME/Android/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/Android --install "build-tools;30.0.3" "platform-tools" "platforms;android-30" "system-images;android-30;google_apis;x86_64"

    # Step 5: Set up Android emulator and start it
    - name: Set up Android emulator and start it
      run: |
        # Create a new AVD if it doesn't exist
        echo no | $HOME/Android/cmdline-tools/bin/avdmanager --sdk_root=$HOME/Android create avd -n test -k "system-images;android-30;google_apis;x86_64" --force
        # Start the emulator in the background
        $HOME/Android/emulator/emulator -avd test -no-window -no-audio -gpu swiftshader_indirect -no-snapshot -accel off &
        # Wait for the emulator to boot
        adb wait-for-device
        # Unlock the emulator screen
        adb shell input keyevent 82
        sleep 15

    # Step 6: Cache Gradle dependencies
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # Step 7: Build APK
    - name: Build APK
      run: |
        cd testapp
        ./gradlew clean assembleDebug

    # Step 8: Run Specific Test
    - name: Run Specific Test
      run: |
        cd testapp
        ./gradlew testDebugUnitTest --tests "com.example.myapplication.MainActivityTest"

    # Step 9: Upload APK as artifact
    - name: Upload APK as artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-debug-apk
        path: testapp/app/build/outputs/apk/debug/app-debug.apk

    # Step 10: Upload test results (optional)
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: testapp/app/build/reports/tests/testDebugUnitTest/
